{"version":3,"file":"static/js/715.4de9d458.chunk.js","mappings":"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","sources":["components/api.js","pages/Movie/Movie.styled.js","pages/Movie/Movie.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = '6692a5b44fd4d65b0502919df9787c03';\n\nexport const FetchTrends = async () => {\n  const options = {\n    url: 'trending/movie/day',\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data.results;\n};\n\nexport const FetchSearch = async query => {\n  const options = {\n    url: 'search/movie',\n    params: {\n      api_key: key,\n      query: query,\n    },\n  };\n  const response = await axios(options);\n  return response.data.results;\n};\n\nexport const FetchMovie = async id => {\n  const options = {\n    url: `movie/${id}`,\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const FetchCast = async id => {\n  const options = {\n    url: `movie/${id}/credits`,\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data.cast;\n};\n\nexport const FetchReviews = async id => {\n  const options = {\n    url: `movie/${id}/reviews`,\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data.results;\n};\n","import { styled } from \"styled-components\";\n\nexport const MainWrapper = styled.div`\ndisplay: flex;\ngap: 48px;\n`\nexport const MovieWrapper = styled.div`\npadding: 0 36px;\n`\nexport const AdditionalInfoWrapper = styled.div`\n`\nexport const Button = styled.button`\n  background-color: #666;\n  color: #ddd;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  margin-bottom: 24px; \n  transition: background-color 0.3s;\n  user-select: none;\n  &:hover {\n    background-color: #888;\n  }\n`;\n","import { FetchMovie } from \"components/api\";\nimport { useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport {\n  AdditionalInfoWrapper,\n  Button,\n  MainWrapper,\n  MovieWrapper,\n} from \"./Movie.styled\";\n\nexport default function Movie() {\n  const params = useParams();\n  const [details, setDetails] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const detailsData = await FetchMovie(params.id);\n      setDetails(detailsData);\n    };\n    fetch();\n  }, [params.id]);\n  if (!details) {\n    return;\n  }\n  const { poster_path, original_title, vote_average, overview, genres } =\n    details;\n  return (\n    <MovieWrapper>\n      <Link to={location.state.from ?? \"/\"}>\n        <Button>Go back</Button>\n      </Link>\n      <MainWrapper>\n        <img\n          src={\n            poster_path ? \"https://image.tmdb.org/t/p/w300\" + poster_path : null\n          }\n          alt={original_title + \" poster\"}\n        />\n        <div>\n          <h1>{original_title}</h1>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {genres\n              ? genres.reduce((text, genre) => text + \" \" + genre.name, \"\")\n              : null}\n          </p>\n        </div>\n      </MainWrapper>\n      <AdditionalInfoWrapper>\n        <p>Aditional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"review\" state={location}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </AdditionalInfoWrapper>\n    </MovieWrapper>\n  );\n}\n"],"names":["axios","key","FetchTrends","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","options","response","_context","prev","next","url","params","api_key","sent","abrupt","data","results","stop","apply","arguments","FetchSearch","_ref2","_callee2","query","_context2","_x","FetchMovie","_ref3","_callee3","id","_context3","concat","_x2","FetchCast","_ref4","_callee4","_context4","cast","_x3","FetchReviews","_ref5","_callee5","_context5","_x4","MainWrapper","styled","_templateObject","_taggedTemplateLiteral","MovieWrapper","_templateObject2","AdditionalInfoWrapper","_templateObject3","Button","_templateObject4","Movie","_location$state$from","useParams","_useState","useState","_useState2","_slicedToArray","details","setDetails","location","useLocation","useEffect","fetch","detailsData","poster_path","original_title","vote_average","overview","genres","_jsxs","children","_jsx","Link","to","state","from","src","alt","Math","round","reduce","text","genre","name","Outlet"],"sourceRoot":""}