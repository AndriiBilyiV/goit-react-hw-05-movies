{"version":3,"file":"static/js/595.dcdeac11.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","components/api.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies/Movies.style.js","pages/Movies/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ collection }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {collection.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = '6692a5b44fd4d65b0502919df9787c03';\n\nexport const FetchTrends = async () => {\n  const options = {\n    url: 'trending/movie/day',\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data.results;\n};\n\nexport const FetchSearch = async query => {\n  const options = {\n    url: 'search/movie',\n    params: {\n      api_key: key,\n      query: query,\n    },\n  };\n  const response = await axios(options);\n  return response.data.results;\n};\n\nexport const FetchMovie = async id => {\n  const options = {\n    url: `movie/${id}`,\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const FetchCast = async id => {\n  const options = {\n    url: `movie/${id}/credits`,\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data.cast;\n};\n\nexport const FetchReviews = async id => {\n  const options = {\n    url: `movie/${id}/reviews`,\n    params: {\n      api_key: key,\n    },\n  };\n  const response = await axios(options);\n  return response.data.results;\n};\n","import { styled } from \"styled-components\";\nimport { Field } from \"formik\";\n\nexport const Input = styled(Field)`\nfont-size: 16px;\npadding: 10px 20px;\nborder-radius: 6px;\nmargin-right: 12px;\n`\nexport const Submit = styled.button`\n  background-color: #666;\n  color: #ddd;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 16px;\n  margin-bottom: 24px; \n  transition: background-color 0.3s;\n  user-select: none;\n  &:hover {\n    background-color: #888;\n  }\n`;","import { Form, Formik } from 'formik';\nimport { Input, Submit } from './SearchForm.styled';\n\nexport const SearchForm = ({ setData }) => {\n  return (\n    <Formik\n      initialValues={{ search: '' }}\n      onSubmit={values => {\n        setData({ query: values.search });\n      }}\n    >\n      <Form>\n        <Input name=\"search\" />\n        <Submit type=\"submit\">Search</Submit>\n      </Form>\n    </Formik>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const SearchWrapper = styled.div`\n  padding: 0 36px;\n`;\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { SearchWrapper } from './Movies.style';\nimport { useSearchParams } from 'react-router-dom';\nimport { FetchSearch } from 'components/api';\n\nexport  default function  Movies() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [params, setParams] = useSearchParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const result = await FetchSearch(params.get('query'));\n      setSearchResult(result);\n    };\n    fetch();\n  }, [params]);\n\n  return (\n    <SearchWrapper>\n      <SearchForm setData={setParams} />\n      {searchResult.length > 0 && <MoviesList collection={searchResult} />}\n    </SearchWrapper>\n  );\n};\n"],"names":["MoviesList","_ref","collection","location","useLocation","_jsx","_Fragment","children","map","movie","Link","to","concat","id","state","from","title","axios","key","FetchTrends","_asyncToGenerator","_regeneratorRuntime","_callee","options","response","_context","prev","next","url","params","api_key","sent","abrupt","data","results","stop","apply","arguments","FetchSearch","_ref2","_callee2","query","_context2","_x","FetchMovie","_ref3","_callee3","_context3","_x2","FetchCast","_ref4","_callee4","_context4","cast","_x3","FetchReviews","_ref5","_callee5","_context5","_x4","Input","styled","Field","_templateObject","_taggedTemplateLiteral","Submit","_templateObject2","SearchForm","setData","Formik","initialValues","search","onSubmit","values","_jsxs","Form","name","type","SearchWrapper","Movies","_useState","useState","_useState2","_slicedToArray","searchResult","setSearchResult","_useSearchParams","useSearchParams","_useSearchParams2","setParams","useEffect","fetch","result","get","length"],"sourceRoot":""}